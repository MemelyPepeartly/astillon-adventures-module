{
  "_id": "LlTVgygBp23MRaxl",
  "name": "Tick Down Round",
  "type": "script",
  "author": null,
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "// Ensure an actor is selected\nlet actor = canvas.tokens.controlled[0]?.actor;\nif (!actor) {\n    ui.notifications.warn(\"No actor selected!\");\n    return;\n}\n\n// Filter out the consumables which have a max uses greater than 1\nconst consumablesToDecrease = actor.items.filter(item => {\n    return item.type === 'consumable' && item.system.uses && item.system.uses.max > 1 && item.system.uses.value > 0;\n});\n\n// Generate a list of item names to display in the dialog\nconst itemNames = consumablesToDecrease.map(item => `${item.name} (${item.system.uses.value}/${item.system.uses.max} rounds of cooldown left)`).join(\"</li><li>\");\n\n// Function to decrease the use count of consumable items\nasync function decreaseUsesForConsumables(items) {\n    for (let item of items) {\n        // Decrease the item's uses value\n        await item.update({'system.uses.value': item.system.uses.value - 1});\n        console.log(`Decreased uses for ${item.name}: now ${item.system.uses.value}/${item.system.uses.max}`);\n    }\n}\n\n// Create the dialog content\nlet dialogContent = `<p>Do you want to advance the round and count down the cooldowns for the following items?</p><ul><li>${itemNames}</li></ul>`;\n\n// Create the dialog\nlet d = new Dialog({\n    title: \"Advance Round\",\n    content: dialogContent,\n    buttons: {\n        yes: {\n            icon: \"<i class='fas fa-check'></i>\",\n            label: \"Yes\",\n            callback: () => {\n                console.log(\"Advancing round and updating consumables.\");\n                decreaseUsesForConsumables(consumablesToDecrease);\n            }\n        },\n        no: {\n            icon: \"<i class='fas fa-times'></i>\",\n            label: \"No\",\n            callback: () => console.log(\"No was clicked. Round not advanced.\")\n        }\n    },\n    default: \"no\",\n    close: () => console.log(\"Dialog closed.\")\n});\n\n// Display the dialog\nd.render(true);",
  "folder": null,
  "sort": 200000,
  "ownership": {
    "default": 0,
    "tstGJ3x0JRVfhi4Q": 3
  },
  "flags": {
    "core": {}
  },
  "_stats": {
    "systemId": "pf2e",
    "systemVersion": "5.12.1",
    "coreVersion": "11.315",
    "createdTime": 1705107994717,
    "modifiedTime": 1705113462454,
    "lastModifiedBy": "tstGJ3x0JRVfhi4Q"
  }
}