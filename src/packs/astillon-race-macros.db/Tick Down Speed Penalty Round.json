{
  "_id": "bmZcYyLzTO3COCdn",
  "name": "Tick Down Speed Penalty Round",
  "type": "script",
  "author": null,
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "// Ensure an actor is selected\nlet actor = canvas.tokens.controlled[0]?.actor;\nif (!actor) {\n    ui.notifications.warn(\"No actor selected!\");\n    return;\n}\n\n// Regular expression to match the Speed Penalty effect and extract rounds and penalty\nconst speedPenaltyRegex = /Speed Penalty \\((\\d+) round[s]?\\) \\(Penalty (\\d+)\\)/;\n\n// Gather information about Speed Penalty effects\nlet effectsInfo = actor.items.map(effect => {\n    let match = speedPenaltyRegex.exec(effect.name);\n    if (match) {\n        return {\n            id: effect.id,\n            name: effect.name,\n            rounds: parseInt(match[1]),\n            penalty: parseInt(match[2])\n        };\n    }\n    return null;\n}).filter(e => e !== null);\n\nif (effectsInfo.length === 0) {\n    ui.notifications.warn(\"No Speed Penalty effects found on the actor.\");\n    return;\n}\n\n// Create dialog content\nlet dialogContent = \"<p>The following Speed Penalty round value will tick down by 1:</p><ul>\";\neffectsInfo.forEach(effect => {\n    dialogContent += `<li>${effect.name}</li>`;\n});\ndialogContent += \"</ul>\";\n\n// Function to process Speed Penalty effects\nasync function processSpeedPenaltyEffects(effects) {\n    for (let effect of effects) {\n        if (effect.rounds <= 1) {\n            // Remove the effect\n            await actor.deleteEmbeddedDocuments('Item', [effect.id]);\n            console.log(`Removed Speed Penalty effect from '${actor.name}'`);\n        } else {\n            // Decrease the round counter and update the effect\n            let newEffectName = `Speed Penalty (${effect.rounds - 1} round${effect.rounds - 1 > 1 ? 's' : ''}) (Penalty ${effect.penalty})`;\n            await actor.updateEmbeddedDocuments('Item', [{ _id: effect.id, name: newEffectName }]);\n            console.log(`Updated Speed Penalty effect on '${actor.name}' to '${newEffectName}'`);\n        }\n    }\n}\n\n// Show confirmation dialog\nlet d = new Dialog({\n    title: \"Process Speed Penalty Effects\",\n    content: dialogContent,\n    buttons: {\n        yes: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"Proceed\",\n            callback: () => processSpeedPenaltyEffects(effectsInfo)\n        },\n        no: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"Cancel\"\n        }\n    },\n    default: \"no\",\n    close: () => console.log(\"Speed Penalty processing cancelled.\")\n});\n\nd.render(true);",
  "folder": null,
  "sort": 0,
  "ownership": {
    "default": 0,
    "tstGJ3x0JRVfhi4Q": 3
  },
  "flags": {
    "core": {}
  },
  "_stats": {
    "systemId": "pf2e",
    "systemVersion": "5.12.7",
    "coreVersion": "11.315",
    "createdTime": 1705113917702,
    "modifiedTime": 1706663502492,
    "lastModifiedBy": "tstGJ3x0JRVfhi4Q"
  }
}